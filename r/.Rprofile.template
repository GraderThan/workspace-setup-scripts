local({
  # ---- CRAN mirror ----
  repos <- getOption("repos")
  if (is.null(repos) || isTRUE(repos["CRAN"] == "@CRAN@")) repos <- c()
  repos["CRAN"] <- "__CRAN_URL__"  # e.g. PPM noble/jammy URL
  options(repos = repos)

  # Ensure user library exists (silent, no console output)
  local({
    libdir <- file.path(path.expand("~/.R/libs"), as.character(getRversion()))
    if (!dir.exists(libdir)) dir.create(libdir, recursive = TRUE, showWarnings = FALSE)
  })

  # ---- BSPM (auto-inserted on Ubuntu) ----
  __BSPM_BLOCK__

  # ---- Parallel source builds + reliable downloads ----
  options(
    Ncpus = max(1L, parallel::detectCores() - 1L),
    download.file.method = "libcurl"
  )

  # ---- Fast installer helper (no installed.packages() scan) ----
  fast_install <- function(pkgs) {
    missing <- pkgs[!vapply(pkgs, requireNamespace, logical(1), quietly = TRUE)]
    if (!length(missing)) return(invisible(TRUE))
    if (requireNamespace("pak", quietly = TRUE)) {
      pak::pkg_install(missing, ask = FALSE)
    } else {
      install.packages(missing)
    }
    invisible(TRUE)
  }
  options(graderthan.fast_install = fast_install)

  # ---- Friendly defaults ----
  options(stringsAsFactors = FALSE, scipen = 999, width = 100)

  # ---- Interactive-only classroom niceties ----
  if (interactive()) {
    startup_pkgs <- c(__STARTUP_PKGS__)
    invisible(lapply(startup_pkgs, function(pkg) {
      if (requireNamespace(pkg, quietly = TRUE)) library(pkg, character.only = TRUE)
    }))

    # Quieter output for students (optional)
    options(
      dplyr.summarise.inform = FALSE,
      readr.show_col_types = FALSE
    )

    # VS Code / GUI plotting: use httpgd if available, but NEVER auto-open a browser
    # (Set a global option and don't call hgd_browse())
    options(httpgd.autobrowse = FALSE)
    if (requireNamespace("httpgd", quietly = TRUE)) {
      has_vscode <- nzchar(Sys.getenv("VSCODE_PID")) || identical(Sys.getenv("TERM_PROGRAM"), "vscode")
      has_x11    <- nzchar(Sys.getenv("DISPLAY"))
      if (has_vscode || has_x11) {
        options(device = function(...) httpgd::hgd(silent = TRUE))
      }
    }

    cat("\033[1;34mGrader Than - R Profile Loaded\033[0m\n")
  }
})